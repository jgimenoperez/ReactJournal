{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","hooks/useForm.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","loading","msgError","notes","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","databaseURL","REACT_APP_DATABASEURL","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","GoogleAuthProvider","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","setError","err","finishLoading","loadNotes","a","collection","get","notesSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","console","log","message","logout","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.84ace2f8.chunk.js","sourcesContent":["\n\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Updated note',\n    notesFileUrl: '[Notes] Updated image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n\n        case types.uiRemoveError:\n                return {\n                    ...state,\n                    msgError: null\n                }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n \n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n\n}\n","/*\n    {\n        notes: [],\n        active: null,\n        active: {\n            id: 'KASKLDJALKSDJ129387123',\n            title: '',\n            body: '',\n            imageUrl: '',\n            date: 12387612387126\n        }\n    }\n*/\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\n\nexport const notesReducer = ( state = initialState, action ) => {\n\n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        \n        case  types.notesAddNew:\n            return {\n                ...state,\n                notes: [ action.payload, ...state.notes ]\n            }\n\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n    \n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            } \n\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n\n        default:\n            return state\n    }\n\n\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { types } from '../types/types';\n/*\n    {\n        uid: 'jagdfjahdsf127362718',\n        name: 'Fernando'\n    }\n\n*/\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n        case types.logout:\n                return { }\n    \n        default:\n            return state;\n    }\n\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASEURL,\n    projectId: process.env.REACT_APP_PROJECTID,\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n    appId: process.env.REACT_APP_APPID,\n};\n\n// const firebaseConfigTesting = {\n//     apiKey: \"AIzaSyD5-4gUUrMLCzTWDEJ3QpkmfIboN5PDCq4\",\n//     authDomain: \"push-one-signal-17ede.firebaseapp.com\",\n//     databaseURL: \"https://push-one-signal-17ede.firebaseio.com\",\n//     projectId: \"push-one-signal-17ede\",\n//     storageBucket: \"push-one-signal-17ede.appspot.com\",\n//     messagingSenderId: \"803724161810\",\n//     appId: \"1:803724161810:web:02f32ebc98a71e376339cb\"\n//   };\n\n\n// if( process.env.NODE_ENV === 'test' ) {\n//     // testing\n//     firebase.initializeApp(firebaseConfigTesting);\n// } else {\n// dev/prod\n// firebase.initializeApp(firebaseConfig);\n// }\n    \nfirebase.initializeApp(firebaseConfig);\n\n\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import { types } from '../types/types';\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n})\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n})\n\n","import { db } from '../firebase/firebase-config';\n\n\n\nexport const loadNotes = async ( uid ) => {\n\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n    const notes = [];\n\n    notesSnap.forEach( snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n    \n    return notes;\n}\n\n\n\n","\n\nexport const fileUpload = async ( file ) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dx0pryfzn/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset','react-journal');\n    formData.append('file', file );\n\n    try {\n        \n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            return null;\n        }\n\n    } catch (err) {\n        throw err;\n    }\n\n\n    // return url de la imagen\n}","import Swal from 'sweetalert2';\n\nimport { db } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { fileUpload } from '../helpers/fileUpload';\n\n\nexport const startNewNote = () => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n        \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        try {\n            const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\n    \n            dispatch( activeNote( doc.id, newNote ) );\n            dispatch( addNewNote( doc.id, newNote ) );\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n}\n\nexport const activeNote = ( id, note ) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = ( id, note ) => ({\n    type: types.notesAddNew,\n    payload: {\n        id, ...note\n    }\n})\n\n\nexport const startLoadingNotes = ( uid ) => {\n    return async( dispatch ) => {\n        \n        const notes = await loadNotes( uid );\n        dispatch( setNotes( notes ) );\n\n    }\n}\n\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\n\nexport const startSaveNote = ( note ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        if ( !note.url ){\n            delete note.url;\n        }\n\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\n\n        dispatch( refreshNote( note.id, noteToFirestore ) );\n        Swal.fire('Saved', note.title, 'success');\n    }\n}\n\nexport const refreshNote = ( id, note ) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\n\nexport const startUploading = ( file ) => {\n    return async( dispatch, getState ) => {\n\n        const { active:activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n        activeNote.url = fileUrl;\n\n        dispatch( startSaveNote( activeNote ) )\n        \n\n        Swal.close();\n    }\n}\n\n\nexport const startDeleting = ( id ) => {\n    return async( dispatch, getState ) => {\n         \n        const uid = getState().auth.uid;\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n\n        dispatch( deleteNote(id) );\n\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n});\n","import Swal from 'sweetalert2';\n\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { startLoading, finishLoading } from './ui';\nimport { noteLogout } from './notes';\n\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n\n        dispatch( startLoading() );\n        \n        \n        return firebase.auth().signInWithEmailAndPassword( email, password )\n            .then( ({ user }) => {\n                dispatch(login( user.uid, user.displayName ));\n\n                dispatch( finishLoading() );\n            })\n            .catch( e => {\n                console.log(e);\n                dispatch( finishLoading() );\n                Swal.fire('Error', e.message, 'error');\n            })\n\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\n    return ( dispatch ) => {\n\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async({ user }) => {\n\n                await user.updateProfile({ displayName: name });\n\n                dispatch(\n                    login( user.uid, user.displayName )\n                );\n            })\n            .catch( e => {\n                console.log(e);\n                Swal.fire('Error', e.message, 'error');\n            })\n\n    }\n}\n\n\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch(\n                    login( user.uid, user.displayName )\n                )\n            });\n\n    }\n}\n\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n});\n\n\nexport const startLogout = () => {\n    return async( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n        dispatch( noteLogout() );\n    }\n}\n\n\nexport const logout = () => ({\n    type: types.logout\n})\n\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch( startLoginEmailPassword( email, password ) );\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form \n                onSubmit={ handleLogin }\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux';\nimport validator from 'validator';\n\nimport { useForm } from '../../hooks/useForm';\nimport { setError, removeError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        name: 'Hernando',\n        email: 'nando@gmail.com',\n        password: '123456',\n        password2: '123456',\n    });\n\n    const { name ,email ,password ,password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( isFormValid() ) {\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\n        }\n\n    }\n\n    const isFormValid = () => {\n        \n        if ( name.trim().length === 0 ) {\n            dispatch( setError('Name is required') )\n            return false;\n        } else if ( !validator.isEmail( email ) ) {\n            dispatch( setError('Email is not valid') )\n            return false;\n        } else if ( password !== password2 || password.length < 5 ) {\n            dispatch( setError('Password should be at least 6 characters and match each other') )\n            return false\n        }\n        \n        dispatch( removeError() );\n       return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form \n                onSubmit={ handleRegister }\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            { msgError }\n                        </div>\n                    )\n                }\n\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch( \n            activeNote( id, {\n                date, title, body, url\n            })\n        );\n    }\n\n    return (\n        <div \n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\n            onClick={ handleEntryClick }\n        >\n            \n            {\n                url &&\n                <div \n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${ url })`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\">\n                    { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span> { noteDate.format('dddd') } </span>\n                <h4> { noteDate.format('Do') } </h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id }\n                        { ...note }\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { JournalEntries } from './JournalEntries'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const hanleLogout = () => {\n        dispatch( startLogout() )\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name }</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={ hanleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector( state => state.notes );\n\n    const handleSave = () => {\n        dispatch( startSaveNote( active ) );\n    }\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click();\n    }\n    \n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if ( file ) {\n            dispatch( startUploading( file ) );\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <input \n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={ handleFileChange }\n            />\n\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={ handlePictureClick }\n                >\n                    Picture\n                </button>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { NotesAppBar } from './NotesAppBar';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote, startDeleting } from '../../actions/notes';\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active:note } = useSelector( state => state.notes );\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { body, title, id } = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n        \n        if ( note.id !== activeId.current ) {\n            reset( note );\n            activeId.current = note.id\n        }\n\n    }, [note, reset])\n\n    useEffect(() => {\n        \n        dispatch( activeNote( formValues.id, { ...formValues } ) );\n\n    }, [formValues, dispatch])\n\n\n    const handleDelete = () => {\n        dispatch( startDeleting( id ) );\n    }\n\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                ></textarea>\n\n                {\n                    (note.url) \n                    && (\n                        <div className=\"notes__image\">\n                            <img \n                                src={ note.url }\n                                alt=\"imagen\"\n                            />\n                        </div>\n                    )\n                }\n\n\n            </div>\n\n\n            <button \n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { useSelector } from 'react-redux';\n\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector( state => state.notes );\n\n\n    return (\n        <div \n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\n        >\n            \n            <Sidebar />\n\n\n            <main>\n\n                {\n                    ( active ) \n                        ? ( <NoteScreen /> )\n                        : ( <NothingSelected /> )\n                }\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\nimport { firebase } from '../firebase/firebase-config'\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoute } from './PrivateRoute';\n\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n\n\n    useEffect(() => {\n        \n        firebase.auth().onAuthStateChanged( async(user) => {\n\n            if ( user?.uid ) {\n                dispatch( login( user.uid, user.displayName ) );\n                setIsLoggedIn( true );\n                dispatch( startLoadingNotes( user.uid ) );\n\n            } else {\n                setIsLoggedIn( false );\n            }\n\n            setChecking(false);\n\n        });\n        \n    }, [ dispatch, setChecking, setIsLoggedIn ])\n\n\n    if ( checking ) {\n        return (\n            <h1>Wait...</h1>\n        )\n    }\n\n    \n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        isAuthenticated={ isLoggedIn }\n                    />\n\n                    <PrivateRoute \n                        exact\n                        isAuthenticated={ isLoggedIn }\n                        path=\"/\"\n                        component={ JournalScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\n\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}